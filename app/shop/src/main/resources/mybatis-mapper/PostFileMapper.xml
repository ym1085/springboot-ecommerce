<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shoppingmall.mapper.PostFileMapper">

    <!-- 파일 정보 저장 -->
    <insert id="saveFiles" parameterType="list">
        INSERT INTO POST_FILE (
            POST_FILE_ID
            , POST_ID
            , ORIGIN_FILE_NAME
            , STORED_FILE_NAME
            , FILE_PATH
            , FILE_SIZE
            , FILE_TYPE
            , DOWNLOAD_CNT
            , DEL_YN
            , CREATE_DATE
            , DELETE_DATE
            , FILE_ATTACHED
        ) VALUES
        <foreach item="file" collection="list" separator=",">
            (
                #{file.postFileId}
                , #{file.postId}
                , #{file.originFileName}
                , #{file.storedFileName}
                , #{file.filePath}
                , #{file.fileSize}
                , #{file.fileType}
                , 0
                , 'N'
                , NOW()
                , NULL
                , #{file.fileAttached}
            )
        </foreach>
    </insert>

    <!--
        파일 삭제 > 게시글 수정 시 클라이언트가 올린 파일이 있으면 기존 파일은 전부 삭제 후 다시 저장
        트랜잭션 단위에서 수행을 하기에 괜찮을 것 같음
    -->
    <update id="deleteFilesByPostId" parameterType="long">
        DELETE FROM POST_FILE F WHERE F.POST_ID = #{postId}
    </update>

    <!-- 파일 조회 -->
    <select id="getFilesByPostId" parameterType="long" resultType="PostFiles">
        SELECT
            POST_FILE_ID
            , POST_ID
            , ORIGIN_FILE_NAME
            , STORED_FILE_NAME
            , FILE_PATH
            , FILE_SIZE
            , FILE_TYPE
            , DOWNLOAD_CNT
            , DEL_YN
            , CREATE_DATE
            , DELETE_DATE
            , FILE_ATTACHED
        FROM POST_FILE F
        WHERE F.POST_ID = #{postId}
        AND F.DEL_YN = 'N'
    </select>

    <!-- 게시글 삭제 시 연관되어 있는 파일 삭제('Y') -->
    <update id="deleteUpdateFilesByPostId" parameterType="Long">
        UPDATE POST_FILE F
        SET
            F.DEL_YN = 'Y',
            F.DELETE_DATE = NOW()
        WHERE F.POST_ID = #{postId}
    </update>

    <!-- 단건 파일 조회 -->
    <select id="getFileByPostFileId" parameterType="long" resultType="PostFiles">
        SELECT
            POST_FILE_ID
            , POST_ID
            , ORIGIN_FILE_NAME
            , STORED_FILE_NAME
            , FILE_PATH
            , FILE_SIZE
            , FILE_TYPE
            , DOWNLOAD_CNT
            , DEL_YN
            , CREATE_DATE
            , DELETE_DATE
            , FILE_ATTACHED
        FROM POST_FILE F
        WHERE F.POST_FILE_ID = #{postFileId}
        AND F.DEL_YN = 'N'
    </select>

    <!-- 파일 다운로드 수 업데이트 -->
    <update id="increaseDownloadCntByFileId" parameterType="long">
        UPDATE POST_FILE
        SET DOWNLOAD_CNT = DOWNLOAD_CNT + 1
        WHERE POST_FILE_ID = #{postFileId}
    </update>

    <select id="countFilesByPostId" parameterType="long" resultType="int">
        SELECT COUNT(*) AS COUNT FROM POST_FILE WHERE POST_ID = #{postFileId}
    </select>
</mapper>

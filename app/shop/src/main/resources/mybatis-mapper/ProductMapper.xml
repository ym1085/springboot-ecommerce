<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shoppingmall.mapper.ProductMapper">

    <resultMap id="ProductResultMap" type="Product">
        <id property="productId" column="product_id" />
        <result property="categoryId" column="category_id" />
        <result property="categoryName" column="categoryName" />
        <result property="productName" column="product_name" />
        <result property="productPrice" column="product_price" />
        <result property="productStock" column="product_stock" />
        <result property="productDesc" column="product_desc" />
        <result property="productHits" column="product_hits" />
        <result property="itemSellStatus" column="item_sell_status" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <result property="delYn" column="del_yn" />

        <!-- 상품(1) : 상품 파일(N) -->
        <collection property="productFiles" resultMap="ProductFilesResultMap" />
    </resultMap>

    <resultMap id="ProductFilesResultMap" type="ProductFiles">
        <id property="productFileId" column="product_file_id" />
        <result property="productId" column="product_id" />
        <result property="originFileName" column="origin_file_name" />
        <result property="storedFileName" column="stored_file_name" />
        <result property="filePath" column="file_path" />
        <result property="fileSize" column="file_size" />
        <result property="fileExp" column="file_exp" />
        <result property="createDate" column="create_date" />
        <result property="deleteDate" column="delete_date" />
        <result property="delYn" column="del_yn" />
        <result property="fileAttached" column="file_attached" />
        <result property="downloadCnt" column="download_cnt" />
    </resultMap>

    <select id="getProducts" parameterType="SearchRequestDto" resultMap="ProductResultMap">
        SELECT
            p.product_id,
            p.category_id,
            (SELECT
                 pc.category_name
             FROM product_category pc
             where pc.category_id = p.category_id) AS categoryName,
            p.product_name,
            p.product_price,
            p.product_stock,
            p.product_desc,
            p.product_hits,
            p.item_sell_status,
            p.create_date,
            p.update_date,
            p.del_yn,
            IFNULL(pf.product_file_id, NULL) AS product_file_id,
            IFNULL(pf.origin_file_name, '') AS origin_file_name,
            IFNULL(pf.stored_file_name, '') AS stored_file_name,
            IFNULL(pf.file_path, '') AS file_path,
            IFNULL(pf.file_size, 0) AS file_size,
            IFNULL(pf.file_exp, '') AS file_exp,
            IFNULL(pf.create_date, '1900-01-01') AS file_create_date, -- 기본값 예시: 최소 날짜
            IFNULL(pf.delete_date, '1900-01-01') AS file_delete_date, -- 기본값 예시: 최소 날짜
            IFNULL(pf.del_yn, 'N') AS del_yn,
            IFNULL(pf.file_attached, 'N') AS file_attached,
            IFNULL(pf.downlod_cnt, 0) AS downlod_cnt
        FROM PRODUCT p
            INNER JOIN PRODUCT_CATEGORY pc ON p.category_id = pc.category_id
            LEFT JOIN PRODUCT_FILE pf ON p.product_id = pf.product_id
        WHERE p.del_yn != 'Y'
        ORDER BY p.create_date DESC
        LIMIT #{pagination.limitStart}, #{recordSizePerPage} /*LIMIT 20;*/
    </select>

    <!-- 상품 수 카운팅 -->
    <select id="count" resultType="int">
        SELECT COUNT(*) AS cnt
        FROM PRODUCT p
        WHERE p.del_yn != 'Y'
    </select>

    <select id="getProductByProductId" parameterType="int" resultMap="ProductResultMap">
        SELECT
            p.product_id,
            p.category_id,
            (select
                 pc.category_name
             from product_category pc
             where pc.category_id = p.category_id) AS categoryName,
            p.product_name,
            p.product_price,
            p.product_stock,
            p.product_desc,
            p.product_hits,
            p.item_sell_status,
            p.create_date,
            p.update_date,
            p.del_yn,
            ifnull(pf.product_file_id, 0) AS product_file_id,
            ifnull(pf.origin_file_name, '') AS origin_file_name,
            ifnull(pf.stored_file_name, '') AS stored_file_name,
            ifnull(pf.file_path, '') AS file_path,
            ifnull(pf.file_size, 0) AS file_size,
            ifnull(pf.file_exp, '') AS file_exp,
            ifnull(pf.create_date, '1900-01-01') AS file_create_date, -- 기본값 예시: 최소 날짜
            ifnull(pf.delete_date, '1900-01-01') AS file_delete_date, -- 기본값 예시: 최소 날짜
            ifnull(pf.del_yn, 'n') AS del_yn,
            ifnull(pf.file_attached, 'n') AS file_attached,
            ifnull(pf.downlod_cnt, 0) AS downlod_cnt
        FROM PRODUCT p
            INNER JOIN PRODUCT_CATEGORY pc ON p.category_id = pc.category_id
            LEFT JOIN PRODUCT_FILE pf ON p.product_id = pf.product_id
        WHERE p.product_id = #{productId}
        AND p.del_yn != 'Y'
    </select>

    <insert id="saveProducts" parameterType="Product" useGeneratedKeys="true" keyProperty="productId">
        INSERT INTO PRODUCT
            (
                CATEGORY_ID,
                PRODUCT_NAME,
                PRODUCT_PRICE,
                PRODUCT_STOCK,
                PRODUCT_DESC,
                ITEM_SELL_STATUS,
                CREATE_DATE,
                UPDATE_DATE,
                DEL_YN
            )
            VALUES
            (
                #{categoryId},
                #{productName},
                #{productPrice},
                #{productStock},
                #{productDesc},
                #{itemSellStatus},
                NOW(),
                NOW(),
                'N'
            )
    </insert>

    <update id="updateProduct" parameterType="Product">
        UPDATE PRODUCT
        SET
            category_id = #{categoryId},
            product_name = #{productName},
            product_price = #{productPrice},
            product_stock = #{productStock},
            product_desc = #{productDesc},
            item_sell_status = #{itemSellStatus},
            update_date = NOW()
        WHERE
            product_id = #{productId}
        AND
            del_yn = 'N'
        AND
            EXISTS (
                SELECT 1 FROM MEMBER
                WHERE MEMBER.member_id = #{memberId}
                AND MEMBER.role = 'ROLE_ADMIN'
            )
    </update>

    <update id="deleteProduct" parameterType="int">
        UPDATE PRODUCT
        SET
            del_yn = 'Y'
        WHERE
            product_id = #{productId}
        AND
            del_yn = 'N'
    </update>

    <select id="countByProductName" parameterType="Product" resultType="int">
        SELECT COUNT(*) AS cnt
        FROM PRODUCT
        WHERE product_name = #{productName}
        AND del_yn = 'N'
    </select>
</mapper>
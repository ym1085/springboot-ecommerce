<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shoppingmall.mapper.ProductMapper">

    <resultMap id="ProductResultMap" type="Product">
        <id property="productId" column="product_id" />
        <result property="categoryId" column="category_id" />
        <result property="categoryName" column="categoryName" />
        <result property="productName" column="product_name" />
        <result property="productPrice" column="product_price" />
        <result property="productStock" column="product_stock" />
        <result property="productDesc" column="product_desc" />
        <result property="productHits" column="product_hits" />
        <result property="itemSellStatus" column="item_sell_status" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <result property="delYn" column="del_yn" />

        <!-- 상품(1) : 상품 파일(N) -->
        <collection property="productFiles" resultMap="ProductFilesResultMap" />
    </resultMap>

    <resultMap id="ProductFilesResultMap" type="ProductFiles">
        <id property="productFileId" column="product_file_id" />
        <result property="productId" column="product_id" />
        <result property="originFileName" column="origin_file_name" />
        <result property="storedFileName" column="stored_file_name" />
        <result property="filePath" column="file_path" />
        <result property="fileSize" column="file_size" />
        <result property="fileType" column="file_type" />
        <result property="createDate" column="create_date" />
        <result property="deleteDate" column="delete_date" />
        <result property="delYn" column="del_yn" />
        <result property="fileAttached" column="file_attached" />
        <result property="downloadCnt" column="download_cnt" />
    </resultMap>

    <select id="getProducts" parameterType="SearchRequestDto" resultMap="ProductResultMap">
        SELECT
            product.product_id,
            product.category_id,
            (SELECT
                 product_category.category_name
             FROM PRODUCT_CATEGORY product_category
             where product_category.category_id = product.category_id) AS categoryName,
            product.product_name,
            product.product_price,
            product.product_stock,
            product.product_desc,
            product.product_hits,
            product.item_sell_status,
            product.create_date,
            product.update_date,
            product.del_yn,
            IFNULL(product_file.product_file_id, NULL) AS product_file_id,
            IFNULL(product_file.origin_file_name, '') AS origin_file_name,
            IFNULL(product_file.stored_file_name, '') AS stored_file_name,
            IFNULL(product_file.file_path, '') AS file_path,
            IFNULL(product_file.file_size, 0) AS file_size,
            IFNULL(product_file.file_type, '') AS file_type,
            IFNULL(product_file.create_date, '1900-01-01') AS file_create_date, -- 기본값 예시: 최소 날짜
            IFNULL(product_file.delete_date, '1900-01-01') AS file_delete_date, -- 기본값 예시: 최소 날짜
            IFNULL(product_file.del_yn, 'N') AS del_yn,
            IFNULL(product_file.file_attached, 'N') AS file_attached,
            IFNULL(product_file.downlod_cnt, 0) AS downlod_cnt
        FROM PRODUCT product
            INNER JOIN PRODUCT_CATEGORY product_category ON product.category_id = product_category.category_id
            LEFT JOIN PRODUCT_FILE product_file ON product.product_id = product_file.product_id
        ORDER BY product.create_date DESC
        LIMIT #{pagination.limitStart}, #{recordSizePerPage} /*LIMIT 20;*/
    </select>

    <!-- 상품 수 카운팅 -->
    <select id="count" parameterType="SearchRequestDto" resultType="int">
        SELECT COUNT(*)
        FROM PRODUCT P
        WHERE P.DEL_YN != 'Y'
    </select>

    <select id="getProductByProductId" parameterType="long" resultMap="ProductResultMap">
        SELECT
            product.product_id,
            product.category_id,
            (SELECT
                 product_category.category_name
             FROM PRODUCT_CATEGORY product_category
             where product_category.category_id = product.category_id) AS categoryName,
            product.product_name,
            product.product_price,
            product.product_stock,
            product.product_desc,
            product.product_hits,
            product.item_sell_status,
            product.create_date,
            product.update_date,
            product.del_yn,
            IFNULL(product_file.product_file_id, 0) AS product_file_id,
            IFNULL(product_file.origin_file_name, '') AS origin_file_name,
            IFNULL(product_file.stored_file_name, '') AS stored_file_name,
            IFNULL(product_file.file_path, '') AS file_path,
            IFNULL(product_file.file_size, 0) AS file_size,
            IFNULL(product_file.file_type, '') AS file_type,
            IFNULL(product_file.create_date, '1900-01-01') AS file_create_date, -- 기본값 예시: 최소 날짜
            IFNULL(product_file.delete_date, '1900-01-01') AS file_delete_date, -- 기본값 예시: 최소 날짜
            IFNULL(product_file.del_yn, 'N') AS del_yn,
            IFNULL(product_file.file_attached, 'N') AS file_attached,
            IFNULL(product_file.downlod_cnt, 0) AS downlod_cnt
        FROM PRODUCT product
            INNER JOIN PRODUCT_CATEGORY product_category ON product.category_id = product_category.category_id
            LEFT JOIN PRODUCT_FILE product_file ON product.product_id = product_file.product_id
        WHERE product.product_id = #{productId}
    </select>

    <insert id="saveProducts" parameterType="Product" useGeneratedKeys="true" keyProperty="productId">
        INSERT INTO PRODUCT
            (
                category_id,
                product_name,
                product_price,
                product_stock,
                product_desc,
                item_sell_status,
                create_date,
                update_date,
                del_yn
            )
            VALUES
            (
                #{categoryId},
                #{productName},
                #{productPrice},
                #{productStock},
                #{productDesc},
                #{itemSellStatus},
                now(),
                now(),
                'N'
            )
    </insert>

</mapper>